# Copyright DB Netz AG and contributors
# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = [
  "setuptools>=64",
  "setuptools_scm[toml]>=3.4",
  "wheel"
]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]

name = "raillabel"
description = "A devkit for working with recorded and annotated train ride data from Deutsche Bahn."
readme = "README.md"
requires-python = ">=3.8, <3.12"
license = { text = "Apache-2.0" }
authors = [
  { name = "DB Netz AG" },
]
keywords = []
classifiers = [
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "jsonschema>=4.4.0",
  "fastjsonschema>=2.16.2"
]

[project.urls]
Homepage = "https://github.com/DSD-DBS/raillabel"
Documentation = "https://dsd-dbs.github.io/raillabel"

[project.optional-dependencies]
docs = [
  "furo",
  "sphinx",
  "sphinx-copybutton",
  "tomli; python_version<'3.11'",
]

test = [
  "pytest",
  "pytest-cov",
  "json5"
]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.docformatter]
wrap-descriptions = 72
wrap-summaries = 79

[tool.isort]
profile = 'black'
line_length = 100

[tool.mypy]
check_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_unreachable = true
python_version = "3.8"

[[tool.mypy.overrides]]
module = ["tests.*"]
allow_incomplete_defs = true
allow_untyped_defs = true

[[tool.mypy.overrides]]
# Untyped third party libraries
module = [
  # ...
]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "numpy"
add-select = [
  "D212",  # Multi-line docstring summary should start at the first line
  "D402",  # First line should not be the function’s “signature”
  "D417",  # Missing argument descriptions in the docstring
]
add-ignore = [
  "D100",  # Missing docstring in public module
  "D201",  # No blank lines allowed before function docstring  # auto-formatting
  "D202",  # No blank lines allowed after function docstring  # auto-formatting
  "D203",  # 1 blank line required before class docstring  # auto-formatting
  "D204",  # 1 blank line required after class docstring  # auto-formatting
  "D209",  # Multi-line docstring closing quotes should be on a separate line
  "D211",  # No blank lines allowed before class docstring  # auto-formatting
  "D213",  # Multi-line docstring summary should start at the second line
]

[tool.pylint.master]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
  "arguments-renamed",
  "broad-except",
  "global-statement",
  "import-outside-toplevel",
  "invalid-name",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "no-else-break",
  "no-else-continue",
  "no-else-raise",
  "no-else-return",
  "protected-access",
  "redefined-builtin",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-boolean-expressions",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-locals",
  "too-many-public-methods",
  "too-many-return-statements",
  "too-many-statements",
  "unspecified-encoding",
  "dangerous-default-value",

  # Auto-formatting
  "bad-indentation",
  "inconsistent-quotes",
  "missing-final-newline",
  "mixed-line-endings",
  "multiple-imports",
  "multiple-statements",
  "trailing-newlines",
  "trailing-whitespace",
  "unexpected-line-ending-format",
  "ungrouped-imports",
  "wrong-import-order",
  "wrong-import-position",

  # Handled by mypy
  "arguments-differ",
  "assignment-from-no-return",
  "import-error",
  "missing-kwoa",
  "no-member",
  "no-value-for-parameter",
  "redundant-keyword-arg",
  "signature-differs",
  "syntax-error",
  "too-many-function-args",
  "unbalanced-tuple-unpacking",
  "undefined-variable",
  "unexpected-keyword-arg",
]
enable = [
  "c-extension-no-member",
  "deprecated-pragma",
  "use-symbolic-message-instead",
  "useless-suppression",
]

[tool.pytest.ini_options]
addopts = """
  --strict-config
  --strict-markers
"""
testpaths = ["tests"]
xfail_strict = true

[tool.setuptools]
platforms = ["any"]
zip-safe = false

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.packages.find]
exclude = ["LICENSES"]

[tool.setuptools_scm]
# This section must exist for setuptools_scm to work
